C51 COMPILER V9.60.0.0   A94B114_CLOCK                                                     12/19/2022 17:43:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE A94B114_CLOCK
OBJECT MODULE PLACED IN .\Objects\a94B114_clock.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\a94B114_clock.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\a94B114_clock.lst) TABS(2) OBJECT(.\Objects\a94B114_clock.obj)

line level    source

   1          /***************************************************************************//**
   2          *   @file       a94b114_clock.c
   3          *   @brief      a94b114 System clock peripheral function 
   4          *   @author     Application Team, ABOV Semiconductor Co., Ltd.
   5          *   @version    V1.00
   6          *   @date       15. JAN. 2020
   7          *
   8          * Copyright(C) 2020, ABOV Semiconductor
   9          * All rights reserved.
  10          *
  11          ********************************************************************************
  12          * ABOV Disclaimer
  13          *
  14          *IMPORTANT NOTICE - PLEASE READ CAREFULLY
  15          *ABOV Semiconductor ("ABOV") reserves the right to make changes, corrections, enhancements, 
  16          *modifications, and improvements to ABOV products and/or to this document at any time without notice. 
  17          *ABOV does not give warranties as to the accuracy or completeness of the information included herein.
  18          *Purchasers should obtain the latest relevant information of ABOV products before placing orders. 
  19          *Purchasers are entirely responsible for the choice, selection, and use of ABOV products and 
  20          *ABOV assumes no liability for application assistance or the design of purchasers' products. No license, 
  21          *express or implied, to any intellectual property rights is granted by ABOV herein. 
  22          *ABOV disclaims all express and implied warranties and shall not be responsible or
  23          *liable for any injuries or damages related to use of ABOV products in such unauthorized applications. 
  24          *ABOV and the ABOV logo are trademarks of ABOV.
  25          *All other product or service names are the property of their respective owners. 
  26          *Information in this document supersedes and replaces the information previously
  27          *supplied in any former versions of this document.
  28          *2020 ABOV Semiconductor  All rights reserved
  29          *
  30          */
  31          
  32          
  33          /*******************************************************************************
  34          * Included File
  35          *******************************************************************************/
  36          #include "a94b114_clock.h"
  37          #include "delay.h"
  38          
  39          /*******************************************************************************
  40          * Private Pre-processor Definition & Macro
  41          *******************************************************************************/
  42          
  43          /*******************************************************************************
  44          * Private Typedef
  45          *******************************************************************************/
  46          
  47          /*******************************************************************************
  48          * Private Variable
  49          *******************************************************************************/
  50          
  51          /*******************************************************************************
  52          * Private Function Prototype
  53          *******************************************************************************/
  54          
C51 COMPILER V9.60.0.0   A94B114_CLOCK                                                     12/19/2022 17:43:51 PAGE 2   

  55          /*******************************************************************************
  56          * Public Function
  57          *******************************************************************************/
  58          
  59          /**
  60          * @brief  Initialize System Clock peripheral
  61          * @param    clock_sel This parameter contains the selection of clock.
  62          * @return None
  63          */
  64          void Clock_Initial(uint8_t clock_sel)
  65          {
  66   1          uint8_t temp_reg;
  67   1        if(clock_sel <= HSI32_DIV32)
  68   1        {
  69   2          /* Internal 32Mhz RC OSC for system clock */
  70   2          SYSCON_AR = 0x5A;
  71   2          SCCR  &= ~(0x3<<0);            
  72   2          
  73   2          temp_reg = OSCCR;
  74   2          /* Internal RC Oscillator Post-divider Select INT-RC/n (32/n MHz) */
  75   2          temp_reg  &= ~((0x3 << 4) | (1 << 2));
  76   2          temp_reg  |= (clock_sel << 4) | (1 << 2);
  77   2          
  78   2          SYSCON_AR = 0x5A;
  79   2          OSCCR = temp_reg;
  80   2        }
  81   1        else if(clock_sel <= LSI_DIV16)
  82   1        {
  83   2          /* Internal 256kHz RC OSC for system clock */
  84   2          temp_reg = OSCCR;
  85   2          temp_reg &= ~((0x3 << 6) | (0x01));
  86   2          temp_reg |= ((clock_sel - 4) << 6) | (0x01);
  87   2          
  88   2          SYSCON_AR = 0x5A;
  89   2          OSCCR = temp_reg;
  90   2          NOP_10us_Delay(1000);
  91   2          
  92   2          temp_reg = SCCR;
  93   2          temp_reg  |= 0x02;
  94   2          
  95   2          SYSCON_AR = 0x5A;
  96   2          SCCR  = temp_reg;  
  97   2        }
  98   1        else if(clock_sel == HSE)
  99   1        {
 100   2          /* Input GPIO mode, Alternative Function for External Main OSC  */
 101   2          P1IO &= ~((0x1 << 1) | (0x1 << 0)); 
 102   2          
 103   2          /* External Main OSC for system clock */
 104   2          SYSCON_AR = 0x5A;
 105   2          OSCCR |= (0x1<<1);
 106   2          NOP_10us_Delay(1000);
 107   2          
 108   2          temp_reg = SCCR;
 109   2          temp_reg  |= 0x01;
 110   2          
 111   2          SYSCON_AR = 0x5A;
 112   2          SCCR  = temp_reg;    
 113   2        }
 114   1      }
 115          
 116          /**
C51 COMPILER V9.60.0.0   A94B114_CLOCK                                                     12/19/2022 17:43:51 PAGE 3   

 117          * @brief  Controls clock frequency selection and oscillator operation.
 118          * @param    osc_sel   This parameter contains the selection of Oscillator.
 119          *
 120          *               - LSIRC  = 0
 121          *             - HSIRC  = 1
 122          *             - XCLK   = 2
 123          * @param    hsirc_div   This parameter contains the Post-divider Selection of Internal RC Oscillator.
 124          *
 125          *             - HSI32_DIV2    = 0
 126          *             - HSI32_DIV4    = 1
 127          *             - HSI32_DIV8    = 2
 128          *             - HSI32_DIV32   = 3
 129          *             - LSI_DIV2        = 4
 130          *             - LSI_DIV4        = 5
 131          *             - LSI_DIV8        = 6
 132          *             - LSI_DIV16       = 7
 133          *
 134          * @param    osc_enable  This parameter contains the enable of oscillator.
 135          *
 136          *               - OSC_DIS  = 0
 137          *               - OSC_EN   = 1
 138          * @return None
 139          */
 140          void Clock_ConfigureOSC(uint8_t osc_sel, uint8_t irc_div, uint8_t osc_enable)
 141          {
 142   1        uint8_t temp_reg;
 143   1        
 144   1        if(osc_sel == LSIRC)
 145   1        {
 146   2            if(osc_enable == OSC_DIS)
 147   2            {
 148   3                /* Disable Low Frequency(256kHz) Internal RC OSC for system clock */
 149   3                SYSCON_AR = 0x5A;
 150   3                OSCCR &= ~(0x1 << 0);
 151   3            }
 152   2            else if(osc_enable == OSC_EN)
 153   2            {
 154   3                /* Enable Low Frequency(256kHz) Internal RC OSC for system clock */
 155   3                temp_reg = OSCCR;
 156   3                temp_reg |= (osc_enable << 0);
 157   3                
 158   3                temp_reg &= ~(0x3 << 6);
 159   3                temp_reg |= ((irc_div-4) << 6);
 160   3          
 161   3                SYSCON_AR = 0x5A;
 162   3                OSCCR = temp_reg;
 163   3            }            
 164   2            
 165   2        }
 166   1        else if(osc_sel == HSIRC)
 167   1        {
 168   2              if(osc_enable == OSC_DIS)
 169   2              {
 170   3                  /* Disable High Frequency(32MHz) Internal RC OSC for system clock */
 171   3                  SYSCON_AR = 0x5A;
 172   3                  OSCCR &= ~(0x1 << 2);          
 173   3              }
 174   2              else if(osc_enable == OSC_EN)
 175   2              {
 176   3                  temp_reg = OSCCR;
 177   3                  /* Enable High Frequency(32MHz) Internal RC OSC for system clock */
 178   3                  temp_reg |= (osc_enable << 2);
C51 COMPILER V9.60.0.0   A94B114_CLOCK                                                     12/19/2022 17:43:51 PAGE 4   

 179   3                  
 180   3                  temp_reg &= ~(0x3<<4);
 181   3                  temp_reg |= (irc_div<<4);
 182   3            
 183   3                  SYSCON_AR = 0x5A;
 184   3                  OSCCR = temp_reg;
 185   3              }
 186   2        }
 187   1        else if(osc_sel == XCLK)
 188   1        {
 189   2              if(osc_enable == OSC_DIS)
 190   2              {
 191   3                  /* Disable External Main OSC for system clock */
 192   3                  SYSCON_AR = 0x5A;
 193   3                  OSCCR  &= ~(0x1 << 1);
 194   3              }
 195   2              else if(osc_enable == OSC_EN)
 196   2              {
 197   3                  /* Input GPIO mode, Alternative Function for External Main OSC  */
 198   3                  P1IO &= ~((0x1 << 1) | (0x1 << 0)); 
 199   3                  
 200   3                  /* Enable External Main OSC for system clock */
 201   3                  SYSCON_AR = 0x5A;
 202   3                  OSCCR  |= (osc_enable << 1);               
 203   3              }
 204   2        }
 205   1      }
 206          
 207          
 208          /**
 209          * @brief  Configure Stop release time for fast wakeup(fx = 16Mhz)
 210          * @param    time_sel  This parameter contains the selection of time.(0~7)
 211          * @return None
 212          */
 213          void Clock_ConfigureStopReleaseTime(uint8_t time_sel)
 214          {
 215   1        uint8_t temp_reg;
 216   1        
 217   1        temp_reg = SCCR;
 218   1        temp_reg &= ~(0x7 << 4);
 219   1        temp_reg |= (time_sel << 4);
 220   1      
 221   1        SYSCON_AR = 0x5A;
 222   1        SCCR = temp_reg;
 223   1      }
 224          
 225          /**
 226          * @brief  Configure Operating LSI(256kHz) at stop mode
 227          * @param   enable   This parameter contains the enable of this function. 
 228          *
 229          *     - FALSE   = 0
 230          *     - TRUE    = 1
 231          * @return None
 232          */
 233          void Clock_ConfigureLSIOperateOnStop(uint8_t enable)
 234          {
 235   1        uint8_t temp_reg;
 236   1        
 237   1        temp_reg = SCCR;
 238   1        temp_reg &= ~(0x1 << 2);
 239   1        temp_reg |= (enable << 2);
 240   1      
C51 COMPILER V9.60.0.0   A94B114_CLOCK                                                     12/19/2022 17:43:51 PAGE 5   

 241   1        SYSCON_AR = 0x5A;
 242   1        SCCR = temp_reg;
 243   1      }
 244          
 245          /**
 246          * @brief    Get Systemclock frequency(speed)
 247          * @param   None
 248          * @return   The value of system clock(frequency)
 249          */
 250          uint32_t Clock_GetSystemFreq(void)
 251          {
 252   1        return SYSTEM_CLOCK;
 253   1      }
 254          
 255          /* --------------------------------- End Of File ------------------------------ */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    304    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
