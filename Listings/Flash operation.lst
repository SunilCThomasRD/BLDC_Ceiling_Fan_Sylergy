C51 COMPILER V9.60.0.0   FLASH_OPERATION                                                   12/19/2022 10:49:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE FLASH_OPERATION
OBJECT MODULE PLACED IN .\Objects\Flash operation.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\Flash operation.c LARGE OPTIMIZE(4,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\Flash operation.lst) TABS(2) OBJECT(.\Objects\Flash operation.obj)

line level    source

   1          #include  "A94B114.h"
   2          #include  "func_def.h"
   3          #include "flash.h"
   4          
   5          extern volatile void do_flash_at_sram_src();
   6          
   7          int count_500;
   8          
   9          //unsigned char debug_SFR0;
  10          //unsigned char debug_SFR1;
  11          //unsigned char debug_SFR2;
  12          
  13          //unsigned short  debug_count;
  14          //unsigned short  debug_capture_buffer[20];
  15          
  16          //bit stop_flag;
  17          //bit debug_flag;
  18          
  19          extern struct RemoteStatus RemoteData;
  20          
  21          //------------------------------------------------------------------------------
  22          //  C51: SOFTWARE RESET
  23          void  reset (void)
  24          {
  25   1        ((void (code *) (void)) 0x0000) ();   // only support Keil C51 !!
  26   1      }
  27          //------------------------------------------------------------------------------
  28          
  29          //#define TEST_WRITE_SECTOR   7
  30          extern long SleepTimerCounter_1hr,General_Counter;
  31          
  32          unsigned char test_self_PGM()
  33          {
  34   1        unsigned char   return_state;
  35   1        unsigned char   flash_sector_num;
  36   1        unsigned int    flash_memory_address;
  37   1        unsigned char idata test_flash_pattern [ PAGE_SIZE ];
  38   1        
  39   1        test_flash_pattern[0] = 0xAA;
  40   1        test_flash_pattern[1] = RemoteData.Power;
  41   1        test_flash_pattern[2] = RemoteData.Light;
  42   1        test_flash_pattern[3] = RemoteData.FanSpeed;
  43   1        test_flash_pattern[4] = RemoteData.Timer_Hrs;
  44   1        test_flash_pattern[5] = RemoteData.Sleep;
  45   1        test_flash_pattern[6] = (General_Counter & 0xFF);
  46   1        test_flash_pattern[7] = ((General_Counter>>8) & 0xFF);
  47   1        test_flash_pattern[8] = ((General_Counter>>16) & 0xFF);
  48   1        test_flash_pattern[9] = ((General_Counter>>24) & 0xFF);
  49   1        test_flash_pattern[10] = (SleepTimerCounter_1hr & 0xFF);
  50   1        test_flash_pattern[11] = ((SleepTimerCounter_1hr>>8) & 0xFF);
  51   1        test_flash_pattern[12] = ((SleepTimerCounter_1hr>>16) & 0xFF);
  52   1        test_flash_pattern[13] = ((SleepTimerCounter_1hr>>24) & 0xFF);
  53   1          
  54   1        //pAddr is the sector number ,A94B114 has 255 sectors(0 ~ 255).
C51 COMPILER V9.60.0.0   FLASH_OPERATION                                                   12/19/2022 10:49:28 PAGE 2   

  55   1        //the 255th sector,last 32 byte flash addr :0x1FE0~0x1FFF (8160~8192)
  56   1        flash_sector_num    = TEST_WRITE_SECTOR;
  57   1        flash_memory_address  = (flash_sector_num << 5 );
  58   1        
  59   1        return_state = Flash_Erase( flash_memory_address );
  60   1        if ( return_state != 0) 
  61   1        { 
  62   2          return SELF_PGM_ERASE_ERROR;  
  63   2        }
  64   1        
  65   1        return_state = Flash_Write( flash_memory_address, test_flash_pattern );
  66   1        if ( return_state != 0) 
  67   1        { 
  68   2          return SELF_PGM_VERIFY_ERROR; 
  69   2        }
  70   1        
  71   1        return SELF_PGM_OK;
  72   1      }
  73          //------------------------------------------------------------------------------
  74          /*void MainFlash( void )
  75          {
  76          //------------------------------------------------------------------------------
  77          //    interrupt select
  78          //------------------------------------------------------------------------------
  79            debug_SFR0 = IRQ0;
  80            debug_SFR0 = IRQ1;
  81            debug_SFR0 = IRQ2;
  82            
  83            debug_count = 0;
  84            stop_flag = 0;
  85            debug_flag = 0; 
  86            EA = 1;
  87          
  88          }*/
  89          
  90          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    334    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      32
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
